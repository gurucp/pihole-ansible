---
- name: Detect first non-loopback interface
  ansible.builtin.set_fact:
    pihole_interface: "{{ ansible_facts['interfaces'] | difference(['lo']) | first }}"

- name: Set IPv4 address fact robustly
  ansible.builtin.set_fact:
    pihole_ipv4: "{{ ansible_facts['interfaces'][pihole_interface]['ipv4']['address'] | default(ansible_default_ipv4.address, true) }}"


# Install required dependencies (curl and sudo)
- name: Install dependencies
  ansible.builtin.apt:
    name:
      - curl
      - sudo
    state: present
  become: true
# Create pihole group
- name: Ensure pihole group exists
  ansible.builtin.group:
    name: pihole
    system: true

# Need to create pihole user and group
- name: Ensure pihole user and group exist
  ansible.builtin.user:
    name: pihole
    group: pihole
    shell: /usr/sbin/nologin
    system: true
    create_home: false

# Create pihole directory under /etc
- name: Ensure /etc/pihole directory exists
  ansible.builtin.file:
    path: /etc/pihole
    state: directory
    owner: pihole
    group: pihole
    mode: "0775"

# Create pihole.toml. Else unattned install will fail as it
# pihole.toml will have basic entry. After installing user can configure what is required
# This is getting rendred from pihole.toml.j2 template. Please feel free to modify the template as per your requirements.
- name: Copy pre-configured pihole.toml
  ansible.builtin.template:
    src: pihole.toml.j2
    dest: /etc/pihole/pihole.toml
    owner: pihole
    group: pihole
    mode: "0644"

# Download official Pi-hole installer script
- name: Download Pi-hole install script
  ansible.builtin.get_url:
    url: https://install.pi-hole.net
    dest: /tmp/pihole-install.sh
    mode: '0755'

# Run Pi-hole install script in unattended mode with configured web password
- name: Run Pi-hole install script (unattended)
  ansible.builtin.command:
    cmd: >
      /tmp/pihole-install.sh
      --unattended
  become: true

# Let us set the web password
- name: Check current Pi-hole web password
  ansible.builtin.command:
    cmd: "grep '^WEBPASSWORD=' /etc/pihole/setupVars.conf | cut -d'=' -f2"
  register: current_web_password
  changed_when: false

- name: Set Pi-hole web interface password
  ansible.builtin.command:
    cmd: "pihole-FTL --config webserver.api.password '{{ pihole_web_password }}'"
  become: true
